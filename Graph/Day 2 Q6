vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)
    {
        // code here
        
         vector<vector<int>> vis(n, vector<int>(m, 0)); 
        queue<pair<int,int>>q;

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(i==0 || j==0 || i==n-1 || j==m-1)
                {
                    if(mat[i][j]=='O')
                    {
                        q.push({i,j});
                        vis[i][j]=1;
                    }
                }
                
            }
        }
        
        while(q.size())
        {
            int a=q.front().first;
            int b=q.front().second;
            q.pop();
            int row[]={0,0,-1,+1};
            int col[]={-1,+1,0,0};
            for(int i=0;i<4;i++)
            {
                if(a+row[i]>=0 && a+row[i]<n && b+col[i]>=0 && b+col[i]<m && mat[a+row[i]][b+col[i]]=='O' && !vis[a+row[i]][b+col[i]])
                {
                    vis[a+row[i]][b+col[i]]=1;
                    q.push({a+row[i],b+col[i]});
                }
            }
        }
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(!vis[i][j] &&  mat[i][j]=='O')
                {
                   mat[i][j]='X';
                }
            }
        }
        
        return mat;
        
    }
