class Solution {
public:
    int ladderLength(string startWord, string targetWord, vector<string>& wordList) {
   queue<pair<string,int>> q;
        set<string> s(wordList.begin(),wordList.end());
        s.erase(startWord);
        q.push({startWord,1});
        while(q.empty()==false)
        {
            string st=q.front().first;
            int x=q.front().second;
            q.pop();
            //cout<< st << " " << x<<endl;
            if(st.compare(targetWord)==0)
            return x;
            for(int i=0;i<st.length();i++)
            {   
                string word=st;
                for(char ch='a';ch<='z';ch++)
                {
                    word[i]=ch;
                    if(s.find(word)!=s.end())
                    {   
                        s.erase(word);
                        q.push({word,x+1});
                    }
                }
            }
            
        }
        return 0;
        // Code here
    }
};
