class Solution {
public:
    vector<vector<string>> findSequences(string beginWord, string endWord, vector<string>& wordList) {
        // code here
        unordered_set<string>st(wordList.begin(),wordList.end());
        vector<vector<string>>ans;
        queue<vector<string>>q;
        q.push({beginWord});
        st.erase(beginWord);
        while(q.size())
        {
            int m=q.size();
              vector<string>erase;
            while(m-- && q.size())
            {
                vector<string> v=q.front();
                q.pop();
                int n=v.size();
                string word=v[n-1];
                if(word==endWord)
                {
                    ans.push_back(v);
                    continue;
                }
                for(int i=0;i<word.size();i++)
                {
                    char original=word[i];
                    for(int j=0;j<26;j++)
                    {
                        word[i]='a'+j;
                        if(st.find(word)!=st.end())
                        {
                            v.push_back(word);
                            erase.push_back(word);
                            q.push(v);
                            v.pop_back();
                        }
                    }
                    word[i]=original;
                }
            }
            for(int i=0;i<erase.size();i++)
            {
                if(st.find(erase[i])!=st.end())
                st.erase(erase[i]);
            }
            erase.clear();
        }
        return ans;
    }
