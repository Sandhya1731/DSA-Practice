//median of two sorted arrays of different size
//with auxillary space O(n) ,Tc:O(n)


class Solution{
    public:
    double MedianOfArrays(vector<int>& array1, vector<int>& array2)
    {
        // Your code goes here
           vector<double>ans;
        int i=0,j=0;
        int count=0;
        int m=array1.size();
        int n=array2.size();
        
            int k=(n+m)/2+1;
        
       
        while(i<m&&j<n&&count!=k)
        {
            if(array1[i]<=array2[j])
            {
                ans.push_back(array1[i]);
                i++;
                count++;
            }
            else
            {
                ans.push_back(array2[j]);
                j++;
                count++;
            }
        }
        while(i<m&&count!=k)
        {
            ans.push_back(array1[i]);
            i++;
            count++;
        }
         while(j<n&&count!=k)
        {
            ans.push_back(array2[j]);
            j++;
            count++;
        }
        if((n+m)%2==0)
        {
            return (ans[k-2]+ans[k-1])/2;
        }
        else
        {
          return ans[k-1];  
        }
           
    }
};


//without space in Tc:O(n) 
class Solution{
    public:
    double MedianOfArrays(vector<int>& array1, vector<int>& array2)
    {
        // Your code goes here
           
        int i=0,j=0;
        int count=0;
        int m=array1.size();
        int n=array2.size();
        
            int k=(n+m)/2;
        
       double ans1=-1;
       double ans2=-1;
        while(count<=k)
        {
            ans2=ans1;
            if(i<m&&j<n){
                ans1=(array1[i]>array2[j])?array2[j++]:array1[i++];
            }
           else if(i<m)
            {
               ans1=array1[i++];
            }
            else
            {
                ans1=array2[j++];
            }
            count++;
        }
        
        if((n+m)%2==0)
        {
            return (ans1+ans2)/2;
        }
        else
        {
          return ans1;  
        }
           
    }
};
