//Function to return a list containing elements of left view of the binary tree.
vector<int> leftView(Node *root)
{
   // Your code here
   
   queue<Node*> q;
   vector<int> v;
   if(root)
   {
       q.push(root);
   }
   
   while(!q.empty()){
       
       int size=q.size();
       for(int i=0;i<size;i++)
       {
           Node* temp=q.front();
           q.pop();
        if(i==0) {
        v.push_back(temp->data);
        }
           if(temp->left)
           {
               q.push(temp->left);
           }
           if(temp->right)
           {
               q.push(temp->right);
           }
       }
   }
   return v;
   
   
   
   
   
   void helper(Node* root, int h,vector<int>&v){
    if(root==NULL){
        return ;
    }
    if(v.size()==h){
        v.push_back(root->data);
    }
    helper(root->left,h+1,v);
    helper(root->right,h+1,v);
    return;
    
}
//Function to return a list containing elements of left view of the binary tree.
vector<int> leftView(Node *root)
{
// recursive solution
vector<int>v;

helper(root,0,v);
return v;
}
}
