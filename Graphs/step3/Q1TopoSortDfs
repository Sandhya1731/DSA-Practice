//https://practice.geeksforgeeks.org/problems/topological-sort/1
void dfs(int i,stack<int>&s,vector<int>adj[],vector<int>&vis)
	{
	    vis[i]=1;
	   
	    for(auto it:adj[i])
	    {
	        if(!vis[it])
	        {
	            dfs(it,s,adj,vis);
	        }
	    }
	    s.push(i);
	}
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    //using dfs
	    vector<int>vis(V,0);
	    stack<int>s;
	    vector<int>ans;
	    for(int i=0;i<V;i++)
	    {
	        if(!vis[i])
	        {
	            dfs(i,s,adj,vis);
	        }
	    }
	    while(!s.empty())
	    {
	     ans.push_back(s.top());
	     s.pop();
	    }
	    return ans;
	}
